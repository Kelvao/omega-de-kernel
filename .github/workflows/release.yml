name: Release
on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEVKITPRO: '${{ github.workspace }}/devkitpro'
      DEVKITARM: '${{ github.workspace }}/devkitpro/devkitARM'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set execute permissions
        run: chmod -R +x ${{ github.workspace }}/devkitpro
          
      - name: Install ARM GCC
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi
          sudo dkp-pacman -S gba-dev

      - name: Build with Make
        run: make
        working-directory: ${{ github.workspace }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: '*.gba'     

  link-to-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Wine
        run: |
          sudo dpkg --add-architecture i386
          sudo mkdir -pm755 /etc/apt/keyrings
          wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
          sudo wget -NP /etc/apt/sources.list.d https://dl.winehq.org/wine-builds/ubuntu/dists/bionic/winehq-bionic.sources
          sudo apt update
          sudo apt install --install-recommends winehq-stable
      
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
      
      - name: Run the executable
        run: wine ./link_to_image.exe
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: run-artifact
          path: ezkernelnew.bin

  release:
    runs-on: ubuntu-latest
    needs: link-to-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: run-artifact

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: 'Release notes for ${{ github.ref }}.'
          draft: false
          prerelease: false
          release_name: Release ${{ github.ref }}
          tag_name: ${{ github.ref }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          asset_content_type: application/octet-stream
          asset_name: ezkernelnew.bin
          asset_path: ezkernelnew.bin
          upload_url: ${{ steps.create_release.outputs.upload_url }}
